import random

class Character:
    def __init__(self, name, level, health, attack, defense):
        self.name = name
        self.level = level
        self.health = health
        self.attack = attack
        self.defense = defense

    def is_alive(self):
        return self.health > 0

    def attack_target(self, target):
        damage = self.attack
        damage_taken = max(0, damage - target.defense)
        if damage_taken == 0:
            print(f"{target.name} blocked the attack!")
        else:
            target.health -= damage_taken
            print(f"{self.name} attacks {target.name} for {damage_taken} damage! {target.name}'s health: {target.health}")

class Player(Character):
    def __init__(self, name, level, health, attack, defense):
        super().__init__(name, level, health, attack, defense)
        self.experience = 0

    def gain_experience(self, amount):
        self.experience += amount
        print(f"{self.name} gained {amount} experience points.")

    def level_up(self):
        if self.experience >= 50:
            self.level += 1
            self.attack += 10
            self.defense += 5
            self.experience -= 50
            print(f"{self.name} leveled up! Level: {self.level}, Attack: {self.attack}, Defense: {self.defense}")

class Enemy(Character):
    def __init__(self, name, level):
        health = random.randint(10, 30) * level
        attack = random.randint(5, 15) * level
        defense = random.randint(1, 5) * level
        super().__init__(name, level, health, attack, defense)

def battle(player, monster):
    print(f"A wild {monster.name} appears!")
    while player.is_alive() and monster.is_alive():
        player.attack_target(monster)
        if not monster.is_alive():
            print(f"{monster.name} has been defeated!")
            player.gain_experience(20 * monster.level)
            player.level_up()
            break
        monster.attack_target(player)
        if not player.is_alive():
            print(f"{player.name} has been defeated by {monster.name}!")

def main():
    monster_dict = {'슬라임': 1, '고블린': 2, '오크': 3}
    player_name = input("Enter your character name: ")
    player = Player(player_name, 1, 100, 25, 5)
    for monster_name, level in monster_dict.items():
        monster = Enemy(monster_name, level)
        battle(player, monster)
        if not player.is_alive():
            print(f"{player.name} is over, and the game is over.")
            break
    else:
        print(f"{player.name} has defeated all monsters and won the game!")

if __name__ == "__main__":
    main()
